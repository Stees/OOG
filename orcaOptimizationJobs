#! /use/bin/env python
#code will take structures from the input directory, move them to the appropriate place, write the necessary input files for the calculation, and submit the calculation.

import os
import subprocess
import readline
import numpy as np
from re import sub
import shutil
import time

def moveStructure( struc, number, creDirectory, rDirectory, wFile ):
    if '_' not in struc:
        subprocess.Popen('mkdir {0}'.format(str(struc).replace('.xyz','').replace("[","\\[").replace(",","\\,").replace("'","\\'").replace("]","\\]")), cwd=creDirectory, shell=True)
        time.sleep(1)
        shutil.move(rDirectory, wFile)
    elif '_' in struc and number !=1:
        subprocess.Popen('mkdir {0}'.format(number), cwd=creDirectory, shell=True)
        time.sleep(1)
        shutil.move(rDirectory, wFile)
    elif '_' in struc and number == 1:
        #make the outer directory with the name of the structure first
        subprocess.Popen('mkdir {0}'.format(str(struc).rsplit('_',1)[0]), cwd=creDirectory, shell=True)
        time.sleep(1)
        #make inner directory
        subprocess.Popen('mkdir {0}'.format(str(number)), cwd=creDirectory+'/'+str(struc).rsplit('_',1)[0]+'/', shell=True)
        time.sleep(1)
        #move the file
        shutil.move(rDirectory, wFile)
    return

def writeScripts( filePath, structureFile ):
    jobfile = open('{0}/job.pbs'.format(filePath), 'a')
    jobfile.write('#!/bin/bash\n\n')
    jobfile.write('#PBS -N {0}\n'.format(structureFile.replace('.xyz','')))
    jobfile.write('#PBS -r n\n')
    jobfile.write('#PBS -q one_day\n')
    jobfile.write('#PBS -l nodes=1:ppn=8\n')
    jobfile.write('#PBS -l walltime=24:00:00\n')
    jobfile.write('#PBS -j oe\n\n')
    jobfile.write('cd $PBS_O_WORKDIR\n')
    jobfile.write('module purge\n')
    jobfile.write('module load orca/3.0.2\n\n')
    jobfile.write('orca geometryOptimizationOrca.inp > $PBS_O_WORKDIR/geometryOptimizationOrca.out\n')
    jobfile.write('exit 0\n')
    jobfile.close()
        
    optimizationFile = open('{0}/geometryOptimizationOrca.inp'.format(filePath), 'a')
    optimizationFile.write('#give keywords by using !\n')
    optimizationFile.write('#functional, number of basis sets, dispersion correction\n')
    optimizationFile.write('! PBE Def2-TZVP TIGHTSCF OPT D3BJ\n\n')
    optimizationFile.write('#the numbers after xyzfile correspond to charge and multiplicity\n')
    optimizationFile.write('* xyzfile 0 1 {0}\n'.format(structureFile))
    optimizationFile.close()
    return

def findNumber( directory ):
    tempNum = subprocess.Popen(r'ls -d */', stdout=subprocess.PIPE, cwd=directory, shell=True)
    number = tempNum.communicate()[0].split()
    maxNum = max(number)
    return maxNum
    

#identify all the structures in the input directory
new = subprocess.Popen(r'ls', stdout=subprocess.PIPE, cwd=r'/ihome/kjohnson/jpr54/orca/geometryOptimizations/structureInputs/')
Lines = new.communicate()[0].split()
#print('{0}'.format(Lines))

#determine who the user is
user = subprocess.Popen(r'whoami', stdout=subprocess.PIPE)
name = str(user.communicate()[0].split()).replace("['","").replace("']","")

#list to hold the job numbers and locations of the calculations.
r, c = len(Lines), 2
Jobs = [[0 for x in range(r)] for y in range(c)]
#print('{0}'.format(Jobs))

for counter, line in enumerate(Lines):
    if '_' not in line:
        #determine if this structure has already been run somewhere else.
        existing1 = subprocess.Popen(r'ls', stdout=subprocess.PIPE, cwd=r'/ihome/kjohnson/jpr54/orca/geometryOptimizations/singleMolecules/')
        #check Kyle's directories
        existingSub = subprocess.Popen(r'ls', stdout=subprocess.PIPE, cwd=r'/ihome/kjohnson/krb115/orca/singleMolecules/')
        eLines1 = existing1.communicate()[0].split()
        eLines2 = existingSub.communicate()[0].split()
 
 #      add all the existing structures together
        finalELines = eLines1 + eLines2
        
        #compare the name of the structure to the names already present and determine if it needs to be optimized
        structureCreate = 1
        for itemCount, structure in enumerate(finalELines):
            if (line.rsplit('.',1)[0].lower() == structure.lower()):
                print('{0} is a repeated structure and will not be optimized'.format(line))
                structureCreate = 0
                break

        #if the structure does not exist already, create a directory having the name of the structure and move the .xyz file to that directory.
        if (structureCreate == 1):
            #print('{0}'.format(str(line).replace('.xyz','')))

            if (name == 'jpr54'):
                createDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/singleMolecules/'.format(name)
                readDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/structureInputs/{1}'.format(name, str(line))
                writeFile = '/ihome/kjohnson/{0}/orca/geometryOptimizations/singleMolecules/{1}/{2}'.format(name, str(line).replace('.xyz',''), str(line))
                writeDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/singleMolecules/{1}'.format(name, str(line).replace('.xyz',''))
                
            elif (name == 'krb115'):
                createDirectory = '/ihome/kjohnson/{0}/orca/singleMolecules/'.format(name)
                readDirectory = '/ihome/kjohnson/{0}/orca/structureInputs/{1}'.format(name, str(line))
                writeFile = '/ihome/kjohnson/{0}/orca/singleMolecules/{1}/{2}'.format(name, str(line).replace('.xyz',''), str(line))
                writeDirectory = '/ihome/kjohnson/{0}/orca/singleMolecules/{1}'.format(name, str(line).replace('.xyz',''))

            N = 0 #there will never be more than one optimization for a single molecule
            #move the structure to the appropriate directory
            moveStructure( line, N, createDirectory, readDirectory, writeFile )

            #now call the function to write the job.pbs and .inp files, passing it the filepath to use and the name of the structure file.
            writeScripts( writeDirectory ,line )

            #submit the job. Need to change to the job directory. May need to move these to a function
            job = subprocess.Popen('qsub job.pbs', stdout=subprocess.PIPE, cwd=writeDirectory, shell=True)
            #get the job number and structure name. Improve to test that submitted jobs completed correctly, and continue them if they did not finish.
            print('{0} {1}'.format(str(job.communicate()[0].split()).rsplit('.')[0].replace("['",""),line.replace('.xyz','')))

    elif '_' in line:
        #determine if this geometry has already been run somewhere else.
        existingI1 = subprocess.Popen(r'ls', stdout=subprocess.PIPE, cwd=r'/ihome/kjohnson/jpr54/orca/geometryOptimizations/interactions/')
        #check Kyle's directories
        existingI2 = subprocess.Popen(r'ls', stdout=subprocess.PIPE, cwd=r'/ihome/kjohnson/krb115/orca/multipleMolecules/')
        eLinesI1 = existingI1.communicate()[0].split()
        eLinesI2 = existingI2.communicate()[0].split()
        #print('{0} {1}'.format(eLinesI1, eLinesI2))

        #if configurations of the molecules have been run before, identify the highest numbered configuration that has been run.
        maxNumber1, maxNumber2 = '0', '0'
        for configs in eLinesI1:
            if (line.rsplit('_',1)[0].lower() == configs.lower()):
                #print('in loop\n')
                location = '/ihome/kjohnson/jpr54/orca/geometryOptimizations/interactions/{0}'.format(line.rsplit('_',1)[0])
                maxNumber1 = findNumber( location )
                break
        for configs in eLinesI2:
            if (line.rsplit('_',1)[0].lower() == configs.lower()):
                location = '/ihome/kjohnson/krb115/orca/multipleMolecules/{0}'.format(line.rsplit('_',1)[0])
                maxNumber2 = findNumber ( location )
                break
        highestNumber = int(max(maxNumber1, maxNumber2).replace('/',''))
        #print('{0}'.format(highestNumber))
        writeNumber = highestNumber + 1
        #print('{0}'.format(highestNumber))

        #now that the highest existing number has been identified, create the directory in the appropriate location for the user. If highestNumber is 0, do a separate function call
        if highestNumber == 0:
            #need to create the new things.
            if (name == 'jpr54'):
                createDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/interactions/'.format(name)
                readDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/structureInputs/{1}'.format(name, str(line))
                writeFile = '/ihome/kjohnson/{0}/orca/geometryOptimizations/interactions/{1}/1/{2}'.format(name, str(line).rsplit('_',1)[0], str(line).rsplit('_',1)[0]+'_1.xyz')
                writeDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/interactions/{1}/1'.format(name, str(line).rsplit('_',1)[0])
                xyzName = str(line).rsplit('_',1)[0]+'_1.xyz'

            elif (name == 'krb115'):
                createDirectory = '/ihome/kjohnson/{0}/orca/multipleMolecules/'.format(name)
                readDirectory = '/ihome/kjohnson/{0}/orca/structureInputs/{1}'.format(name, str(line))
                writeFile = '/ihome/kjohnson/{0}/orca/multipleMolecules/{1}/1/{2}'.format(name, str(line).rsplit('_',1)[0], str(line).rsplit('_',1)[0]+'_1.xyz')
                writeDirectory = '/ihome/kjohnson/{0}/orca/multipleMolecules/{1}/1'.format(name, str(line))
                xyzName = str(line).rsplit('_',1)[0]+'_1.xyz'
            
        elif (highestNumber != 0):
            if (name == 'jpr54'):
                createDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/interactions/{1}/'.format(name, str(line).rsplit('_',1)[0])
                readDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/structureInputs/{1}'.format(name, str(line))
                writeFile = '/ihome/kjohnson/{0}/orca/geometryOptimizations/interactions/{1}/{2}/{3}'.format(name, str(line).rsplit('_',1)[0], writeNumber, str(line).rsplit('_',1)[0]+'_'+str(writeNumber)+'.xyz')
                writeDirectory = '/ihome/kjohnson/{0}/orca/geometryOptimizations/interactions/{1}/{2}/'.format(name, str(line).rsplit('_',1)[0], writeNumber)
                xyzName = str(line).rsplit('_',1)[0]+'_'+str(writeNumber)+'.xyz'

            elif (name == 'krb115'):
                createDirectory = '/ihone/kjohnson/{0}/orca/multipleMolecules/{1}/'.format(name, str(line).rsplit('_',1)[0])
                readDirectory = '/ihone/kjohnson/{0}/orca/structureInputs/{1}'.format(name, str(line))
                writeFile = '/ihone/kjohnson/{0}/orca/multipleMolecules/{1}/{2}/{3}'.format(name, str(line).rsplit('_',1)[0], writeNumber, str(line).rsplit('_',1)[0]+'_'+str(writeNumber)+'.xyz')
                writeDirectory = '/ihone/kjohnson/{0}/orca/multipleMolecules/{1}/{2}/'.format(name, str(line).rsplit('_',1)[0], writeNumber)
                xyzName = str(line).rsplit('_',1)[0]+'_'+str(writeNumber)+'.xyz'

        moveStructure( line, writeNumber, createDirectory, readDirectory, writeFile )
        writeScripts( writeDirectory, xyzName )
        job = subprocess.Popen('qsub job.pbs', stdout=subprocess.PIPE, cwd=writeDirectory, shell=True)
        print('{0} {1}'.format(str(job.communicate()[0].split()).rsplit('.')[0].replace("['",""),line.replace('.xyz','')))

